{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from \"@/store\";\nVue.use(VueRouter);\nvar routes = [// {\n//   path: '',\n//   component: () => import('../views/Manage'),\n//   redirect:'/login',\n//   children:[\n//     {\n//       path:'home',\n//       name:'首页',\n//       component:() => import('../views/Home')\n//     }, {\n//       path:'user',\n//       name:'员工管理',\n//       component:() => import('../views/User')\n//     }, {\n//       path:'person',\n//       name:'个人信息',\n//       component:() => import('../views/Person')\n//     }, {\n//       path:'file',\n//       name:'文件管理',\n//       component:() => import('../views/File')\n//     }, {\n//       path:'role',\n//       name:'角色管理',\n//       component:() => import('../views/Role')\n//     }, {\n//       path:'menu',\n//       name:'菜单管理',\n//       component:() => import('../views/Menu')\n//     }, {\n//       path:'modify',\n//       name:'密码修改',\n//       component:() => import('../views/Modify')\n//     }\n//   ]\n{\n  path: '',\n  redirect: '/front'\n}, {\n  path: '/login',\n  name: '登录',\n  component: function component() {\n    return import('../views/Login');\n  }\n}, {\n  path: '/register',\n  name: '注册',\n  component: function component() {\n    return import('../views/Register');\n  }\n}, {\n  path: '*',\n  name: '404',\n  component: function component() {\n    return import('../views/404');\n  }\n}, {\n  path: '/front',\n  name: '企业官网',\n  component: function component() {\n    return import('../views/front/FrontPage');\n  }\n}];\nvar router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: routes\n}); // 注意：刷新页面会导致页面路由重置\n\nexport var setRoutes = function setRoutes() {\n  var storeMenus = localStorage.getItem(\"menus\");\n\n  if (storeMenus) {\n    // 拼装动态路由\n    var manageRoute = {\n      path: '',\n      name: 'Manage',\n      component: function component() {\n        return import('../views/Manage.vue');\n      },\n      redirect: \"/front\",\n      children: []\n    };\n    var menus = JSON.parse(storeMenus);\n    menus.forEach(function (item) {\n      if (item.path) {\n        // 当且仅当path不为空的时候才去设置路由\n        var itemMenu = {\n          path: item.path.replace(\"/\", \"\"),\n          name: item.name,\n          component: function component() {\n            return import('../views/' + item.pagePath + '.vue');\n          }\n        };\n        manageRoute.children.push(itemMenu);\n      } else if (item.children.length) {\n        item.children.forEach(function (item) {\n          if (item.path) {\n            var _itemMenu = {\n              path: item.path.replace(\"/\", \"\"),\n              name: item.name,\n              component: function component() {\n                return import('../views/' + item.pagePath + '.vue');\n              }\n            };\n            manageRoute.children.push(_itemMenu);\n          }\n        });\n      }\n    }); // 获取当前的路由对象名称数组\n\n    var currentRouteNames = router.getRoutes().map(function (v) {\n      return v.name;\n    });\n\n    if (!currentRouteNames.includes('Manage')) {\n      // 动态添加到现在的路由对象中去\n      router.addRoute(manageRoute);\n    }\n  }\n}; // 重置我就再set一次路由\n\nsetRoutes();\nrouter.beforeEach(function (to, from, next) {\n  window.document.title = to.name;\n  store.state.currentPathName = to.name;\n  next();\n});\nexport default router;","map":{"version":3,"sources":["D:/system/vue-master/src/router/index.js"],"names":["Vue","VueRouter","store","use","routes","path","redirect","name","component","router","mode","base","process","env","BASE_URL","setRoutes","storeMenus","localStorage","getItem","manageRoute","children","menus","JSON","parse","forEach","item","itemMenu","replace","pagePath","push","length","currentRouteNames","getRoutes","map","v","includes","addRoute","beforeEach","to","from","next","window","document","title","state","currentPathName"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport store from \"@/store\";\n\nVue.use(VueRouter)\n\nconst routes = [\n  // {\n  //   path: '',\n  //   component: () => import('../views/Manage'),\n  //   redirect:'/login',\n  //   children:[\n  //     {\n  //       path:'home',\n  //       name:'首页',\n  //       component:() => import('../views/Home')\n  //     }, {\n  //       path:'user',\n  //       name:'员工管理',\n  //       component:() => import('../views/User')\n  //     }, {\n  //       path:'person',\n  //       name:'个人信息',\n  //       component:() => import('../views/Person')\n  //     }, {\n  //       path:'file',\n  //       name:'文件管理',\n  //       component:() => import('../views/File')\n  //     }, {\n  //       path:'role',\n  //       name:'角色管理',\n  //       component:() => import('../views/Role')\n  //     }, {\n  //       path:'menu',\n  //       name:'菜单管理',\n  //       component:() => import('../views/Menu')\n  //     }, {\n  //       path:'modify',\n  //       name:'密码修改',\n  //       component:() => import('../views/Modify')\n  //     }\n  //   ]\n  {\n    path:'',\n    redirect:'/front'\n  },\n  {\n    path:'/login',\n    name:'登录',\n    component: () => import('../views/Login')\n  }, {\n    path:'/register',\n    name:'注册',\n    component: () => import('../views/Register')\n  }, {\n    path:'*',\n    name:'404',\n    component: () => import('../views/404')\n  }, {\n    path: '/front',\n    name: '企业官网',\n    component: () => import('../views/front/FrontPage')\n  }\n\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n// 注意：刷新页面会导致页面路由重置\nexport const setRoutes = () => {\n  const storeMenus = localStorage.getItem(\"menus\");\n  if (storeMenus) {\n    // 拼装动态路由\n    const manageRoute = { path: '', name: 'Manage', component: () => import('../views/Manage.vue'), redirect: \"/front\", children: [] }\n    const menus = JSON.parse(storeMenus)\n    menus.forEach(item => {\n      if (item.path) {  // 当且仅当path不为空的时候才去设置路由\n        let itemMenu = { path: item.path.replace(\"/\", \"\"), name: item.name, component: () => import('../views/' + item.pagePath + '.vue')}\n        manageRoute.children.push(itemMenu)\n      } else if(item.children.length) {\n        item.children.forEach(item => {\n          if (item.path) {\n            let itemMenu = { path: item.path.replace(\"/\", \"\"), name: item.name, component: () => import('../views/' + item.pagePath + '.vue')}\n            manageRoute.children.push(itemMenu)\n          }\n        })\n      }\n    })\n\n    // 获取当前的路由对象名称数组\n    const currentRouteNames = router.getRoutes().map(v => v.name)\n    if (!currentRouteNames.includes('Manage')) {\n      // 动态添加到现在的路由对象中去\n      router.addRoute(manageRoute)\n    }\n  }\n}\n\n// 重置我就再set一次路由\nsetRoutes()\n\n\nrouter.beforeEach((to, from, next) =>{\n  window.document.title = to.name\n  store.state.currentPathName = to.name\n  next();\n})\n\nexport default router\n"]},"metadata":{},"sourceType":"module"}